#+Title: Netwokring
#+Author: Yogesh Agrawal
#+Email: yogeshiiith@gmail.com
#+Date: <2016-07-31 Sun>

* Introduction
  This document discusses about the networking concepts learned from
  Netorking-SP course in [[https://lagunita.stanford.edu/courses/Engineering/Networking-SP/SelfPaced/courseware][edx.org]].
* Connectivity
  Connectivity is the idea that two computers in different parts of
  the world can connect to one another and exchange data. If we
  connect our computer to the internet we suddenly can talk with all
  the other computers connected on the internet.
* Network Applications
  Read and write data over network. Dominant model: bidirectional,
  reliable byte stream connection.
  - One side reads what the other writes
  - Operates in both directions
  - Reliable (unless connection breaks)

  The basic model is: there are two computers each running a program
  locally, and these two programs communicate over the network. The
  most common communication model used is a bidirectional, reliable
  stream of bytes.
* World Wide Web(HTTP)
  The world wide web works using HTTP, which stands for HyperText
  Transfer Protocol.

  In HTTP a client opens a connection to a server and sends commands
  to it. Server after receiving the request checks if client is
  authorized to access the resource, and then sends a response. The
  response also contains a numeric code. There are various types of
  commands such as GET, PUT, DELETE, INFO, as well as other responses
  such as 400 Bad Request. HTTP is all in ASCII text: for example, the
  beginning of a GET request looks like:
  #+BEGIN_EXAMPLE
  GET / HTTP/1.1
  #+END_EXAMPLE
  and the beginning of a response to a successful requests looks like:
  #+BEGIN_EXAMPLE
  HTTP/1.1 200 OK
  #+END_EXAMPLE

  The basic model is simple: client sends a requests by writing to the
  connection, the server reads the request, processes it, and writes a
  response to the connection, which the client then reads.
* Skype
  Unlike the web, where there is a client and a server, in Skype case
  we have two clients. So rather than having a personal computer
  requesting for data from a dedicated server, we have two personal
  computers requesting data from each other. This difference turns out
  to have really big implication to how Skype works.

  The complication comes from NAT, or Network Address
  Translation. NATs are everywhere today. A small home wireless router
  is a NAT. When a mobile phone connects to the internet, it is behind
  a NAT. If a computer is behind NAT, then it can open a connection to
  the internet, but other nodes on the internet can't easily open
  connections to that computer.
  
  Consider a scenario: Client B is behind NAT, Client A is not behind
  NAT. Now client A wants to talk to client B. The complication here
  is that client A, can't open a connection to client B, as it is
  behind NAT. Skype uses Rendezvous server to allow communication in
  such scenario. When we login to Skype, client opens a connection to
  a network of control servers. In this case, client B opens a
  connection to the Rendezvous server. 

  When client A wants to communicate with client B, it tries to
  connect to client B, but it could not. So instead it sends a message
  to a computer to which client B, is already connected to. Which then
  tells client B, that there is a call from A. If client B accepts the
  call, then it opens a connection to client A. Since client A isn't
  behind NAT, this connection can open normally. This is called
  reverse connection, as it reverses the expected direction of
  initiating the connection. when the connection gets established they
  exchange data over that channel.

* COMMENT TODO
  1. join emacs group
  2. Understanding the Linux Kernel
  3. Check if we can make two concurrent calls in skype to a user.
