#+Title: Bash Programming
#+Author: Yogesh Agrawal
#+Email: yogeshiiith@gmail.com
#+Date: <2016-06-11 Sat>

* Introduction
  This document describes about the bash programming.


* Conditionals
#+BEGIN_EXAMPLE
#!/bin/bash
if [ "foo" = "foo" ];
then
echo "expression evaluated as true"
else
echo "expression evaluated as false"
fi
#+END_EXAMPLE

* Loops
** For Sample
   #+BEGIN_EXAMPLE
   #!/bin/bash
   for i in $(ls); do
   echo item: $i
   done
   #+END_EXAMPLE

   #+BEGIN_EXAMPLE
   #!/bin/bash
   for i in `seq 1 10`; do
   echo $i
   done
   #+END_EXAMPLE

** While Sample
   #+BEGIN_EXAMPLE
   #!/bin/bash
   counter=0
   while [ $counter -lt 10 ]; do
   echo the counter is: $counter
   ((counter++))
   done
   #+END_EXAMPLE
* Functions
** Simple function
   #+BEGIN_EXAMPLE
   #!/bin/bash
   function quit{
   exit
   }
   function hello{
   echo hello
   }
   hello
   quit
   echo hello
   #+END_EXAMPLE

** Function with parameters
   #+BEGIN_EXAMPLE
   #!/bin/bash
   function e {
       echo $1
   }
   e hello
   e world
   echo foo
   #+END_EXAMPLE
* Select to make simple menus
  #+BEGIN_EXAMPLE
  #!/bin/bash
  
  OPTIONS="Hello Quit"
  select opt in $OPTIONS; do
      if [ $opt = Hello ]; then
          echo Hello World
      elif [ $opt = Quit ]; then
          echo done
          exit
      else
          clear
          echo bad option
      fi
  done
  #+END_EXAMPLE
* Command line
  #+BEGIN_EXAMPLE
  #!/bin/bash
  
  if [ -z $1 ]; then
      echo usage: $0 directory
      exit
  fi
  SRCD=$1
  TRGTD=/var/backup
  OF=$(date +%Y%m%d).tgz
  tar -czf $TRGTD$OF $SRCD
  #+END_EXAMPLE
* Read user input
  Prompt user for input.
  #+BEGIN_EXAMPLE
  #!/bin/bash
  
  echo Please, enter your name
  read name
  echo hi $name
  #+END_EXAMPLE
* Arithmetic Evaluation
  #+BEGIN_EXAMPLE
  #!/bin/bash
  
  arg1=1
  arg2=3
  sum=$(($arg1+$arg2))
  echo $sum
  #+END_EXAMPLE
* Return value of program
  Bash stores return value of a program in a variable whose value is
  accessed by $?
  #+BEGIN_EXAMPLE
  #!/bin/bash
  
  cd /var/not &> /dev/null
  echo $?
  cd $(pwd) $> /dev/null
  echo $?
  #+END_EXAMPLE
* Capturing command output
  #+BEGIN_EXAMPLE
  #!/bin/bash

  DBS=`mysql -uroot -e"show databases"`
  for db in $DBS; do
      mysql -uroot -e"show tables from $db"
  done
  #+END_EXAMPLE
