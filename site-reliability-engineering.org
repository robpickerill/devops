#+Title: Site Reliability Engineering
#+Author: Yogesh Agrawal
#+Date: <2016-05-09 Mon>
#+Email: yogeshiiith@gmail.com

* Introduction
  This document describes the learnings from reading of the book *site
  reliability engineering - Google*.

* SRE Definition
  SRE are engineers: apply principles of computer science and
  engineering to build complex and distributed systems.

* Reliability
  Reliability is the probability that a system will perform a required
  function without failure under stated conditions for a state period
  of time.

  Reliability is the most fundamental feature of any product. From all
  the post deployment characteristics of a software that we could
  choose to devote special attention to, the reliability is one we
  regard as primary.

* SRE principle
  Thoroughness and dedication, belief in the value of preparation and
  documentation, and an awareness of what could go wrong, coupled with
  a strong desire to prevent it.

* System Administrator
  The system administrator involves assembling existing software
  components and deploying them to work together to produce a service.

  We need systems that are automati,c not just automated.

* Tenets of SRE
  A SRE team is responsible for the availability, latency,
  performance, efficiency, change management, monitoring, emergency
  response, and capacity planning of the service(s).

* Postmortems
  Postmortems should be written for all significant incidents,
  regardless of whether or not they paged; postmortems that did not
  trigger a page are even more valuable, as they likely point to clear
  monitoring gaps. This investigation should establish what happened
  in detail, find all root causes of the event, and assign actions to
  correct the problem or improve how it is addressed next time. The
  goal should be to fix these faults, rather than avoiding or
  minimizing them.

* Monitoring
  Monitoring is one of the primary means by which service owners keep
  track of a system's health and availability. A classic and common
  approach to monitoring is to watch for a specific value or
  condition, and then to trigger an email alert when that value is
  exceeded or that condition occurs. However, this type of email
  alerting is not an effective solution: a system that requires a
  human to read an email and decide whether or not some type of action
  needs to be taken in response is fundamentally flawed. Monitoring
  should never require a human to interpret any part of the alerting
  domain. Instead, software should do the interpreting, and human
  should be notified only when they need to take action.

* Efficiency and Performance
  Efficient use of resources is important any time a service cares
  about money. 

  Resource use is a function of demand(load), capacity, and software
  efficiency. SREs predict demand, provision capacity, and can modify
  the software. These three factors are a large part (though not the
  entirety) of a service's efficiency.

* TODO
  1. Translate the text - "Google grew at a time when the traditional
     role of the system administrator was being transformed."
  2. OpenFlow open-standard communications protocol.
